var x;
var y;

function main {
  entry: main_44

  main_34:  putchar(")=");     | main_33
  main_21:  vreg_10 <- *x       | main_20
  main_30:  putchar(vreg_14)     | main_29
  main_19:  vreg_9 <- Math_min(vreg_10,vreg_11) @<tag:Static>   | main_18
  main_3:  return vreg_3
  main_41:  *y <- vreg_19       | main_40
  main_13:  putchar(",");     | main_12
  main_42:  vreg_19 <- -2        | main_41
  main_8:  vreg_6 <- *y       | main_7
  main_23:  putchar(vreg_12)     | main_22
  main_17:  putchar("\n");     | main_16
  main_11:  putchar(vreg_7)     | main_10
  main_31:  vreg_14 <- Math_max(vreg_15,vreg_16) @<tag:Static>   | main_30
  main_24:  vreg_12 <- *y       | main_23
  main_18:  putchar(vreg_9)     | main_17
  main_20:  vreg_11 <- *y       | main_19
  main_43:  *x <- vreg_20       | main_42
  main_10:  putchar(")=");     | main_9
  main_25:  putchar(",");     | main_24
  main_29:  putchar("\n");     | main_28
  main_1:  return vreg_2
  main_44:  vreg_20 <- 4        | main_43
  main_6:  putchar(vreg_4)     | main_5
  main_36:  vreg_17 <- *y       | main_35
  main_15:  vreg_8 <- *x       | main_14
  main_12:  vreg_7 <- *y       | main_11
  main_4:  vreg_3 <- 0        | main_3
  main_16:  putchar("pow(");     | main_15
  main_40:  putchar("max(");     | main_39
  main_35:  putchar(vreg_17)     | main_34
  main_32:  vreg_16 <- *y       | main_31
  main_37:  putchar(",");     | main_36
  main_26:  putchar(vreg_13)     | main_25
  main_7:  vreg_4 <- Math_pow(vreg_5,vreg_6) @<tag:Not_Optim, Static>   | main_6
  main_5:  putchar("\n");     | main_4
  main_9:  vreg_5 <- *x       | main_8
  main_33:  vreg_15 <- *x       | main_32
  main_28:  putchar("min(");     | main_27
  main_38:  putchar(vreg_18)     | main_37
  main_27:  vreg_13 <- *x       | main_26
  main_22:  putchar(")=");     | main_21
  main_14:  putchar(vreg_8)     | main_13
  main_39:  vreg_18 <- *x       | main_38
  main_2:  vreg_2 <- 0        | main_1
}

function Init_func {
  entry: Init_func_3

  Init_func_1:  return vreg_21
  Init_func_3:  staticwrite(descr_Math,0,Math_constructor,Math_max,Math_min,Math_pow)     | Init_func_2
  Init_func_2:  vreg_21 <- 0        | Init_func_1
}

function Math_constructor {
  entry: Math_constructor_2

  Math_constructor_2:  vreg_23 <- 0        | Math_constructor_1
  Math_constructor_1:  return vreg_23
}

function Math_max {
  entry: Math_max_10

  Math_max_3:  return vreg_27
  Math_max_9:  vreg_29 <- param[1] | Math_max_8
  Math_max_10:  vreg_30 <- param[0] | Math_max_9
  Math_max_5:  return vreg_28
  Math_max_6:  vreg_28 <- param[1] | Math_max_5
  Math_max_7:  jump Math_max_4 when vreg_26 | Math_max_6
  Math_max_4:  vreg_27 <- param[0] | Math_max_3
  Math_max_2:  vreg_25 <- 0        | Math_max_1
  Math_max_1:  return vreg_25
  Math_max_8:  vreg_26 <- vreg_29 < vreg_30  | Math_max_7
}

function Math_min {
  entry: Math_min_10

  Math_min_9:  vreg_36 <- param[0] | Math_min_8
  Math_min_4:  vreg_34 <- param[0] | Math_min_3
  Math_min_7:  jump Math_min_4 when vreg_33 | Math_min_6
  Math_min_6:  vreg_35 <- param[1] | Math_min_5
  Math_min_2:  vreg_32 <- 0        | Math_min_1
  Math_min_3:  return vreg_34
  Math_min_10:  vreg_37 <- param[1] | Math_min_9
  Math_min_5:  return vreg_35
  Math_min_8:  vreg_33 <- vreg_36 < vreg_37  | Math_min_7
  Math_min_1:  return vreg_32
}

function Math_pow {
  entry: Math_pow_20

  Math_pow_2:  vreg_39 <- 0        | Math_pow_1
  Math_pow_18:  vreg_51 <- vreg_52 <= vreg_53  | Math_pow_17
  Math_pow_16:  vreg_50 <- 0        | Math_pow_15
  Math_pow_14:  vreg_40 <- vreg_49 == vreg_50  | Math_pow_13
  Math_pow_11:  vreg_48 <- 1        | Math_pow_10
  Math_pow_13:  jump Math_pow_4 when vreg_40 | Math_pow_12
  Math_pow_8:  vreg_44 <- Math_pow(vreg_45,vreg_46) @<tag:Not_Optim, Static>   | Math_pow_7
  Math_pow_19:  vreg_52 <- 0        | Math_pow_18
  Math_pow_1:  return vreg_39
  Math_pow_9:  vreg_46 <- vreg_47 - vreg_48  | Math_pow_8
  Math_pow_10:  vreg_47 <- param[1] | Math_pow_9
  Math_pow_5:  return vreg_42
  Math_pow_12:  vreg_45 <- param[0] | Math_pow_11
  Math_pow_6:  vreg_42 <- vreg_43 * vreg_44  | Math_pow_5
  Math_pow_7:  vreg_43 <- param[0] | Math_pow_6
  Math_pow_4:  vreg_41 <- 1        | Math_pow_3
  Math_pow_20:  vreg_53 <- param[1] | Math_pow_19
  Math_pow_3:  return vreg_41
  Math_pow_15:  vreg_49 <- param[1] | Math_pow_14
  Math_pow_17:  assert vreg_51           | Math_pow_16
}

