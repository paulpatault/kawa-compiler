var x;
var y;

function main() {
  var This_alloc_name;

  x = 4;
  y = -2;
  putchar("max(");
  putchar(x);
  putchar(",");
  putchar(y);
  putchar(")=");
  putchar(Math_max(x,y) @<tag:Static>);
  putchar("\n");
  putchar("min(");
  putchar(x);
  putchar(",");
  putchar(y);
  putchar(")=");
  putchar(Math_min(x,y) @<tag:Static>);
  putchar("\n");
  putchar("pow(");
  putchar(x);
  putchar(",");
  putchar(y);
  putchar(")=");
  putchar(Math_pow(x,y) @<tag:Not_Optim, Static>);
  putchar("\n");
  return(0);
}

function Init_func() {
  staticwrite(descr_Math,0,Math_constructor,Math_max,Math_min,Math_pow);
}

function Math_constructor(this) {
  var This_alloc_name;

}

function Math_max(a,b) {
  var This_alloc_name;

  if ((b<a)) {
    return(a);
  } else {
    return(b);
  }
}

function Math_min(a,b) {
  var This_alloc_name;

  if ((a<b)) {
    return(a);
  } else {
    return(b);
  }
}

function Math_pow(x,n) {
  var This_alloc_name;

  assert((0<=n));
  if ((n==0)) {
    return(1);
  } else {
    return((x*Math_pow(x,(n-1)) @<tag:Not_Optim, Static>));
  }
}

